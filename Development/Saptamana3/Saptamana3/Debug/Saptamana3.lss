
Saptamana3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ca6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000ca6  00000d3a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0080006e  0080006e  00000d48  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d48  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000da4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000de0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000930  00000000  00000000  00000e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000754  00000000  00000000  00001798  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000550  00000000  00000000  00001eec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000148  00000000  00000000  0000243c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d6  00000000  00000000  00002584  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000024d  00000000  00000000  0000295a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002ba7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ea       	ldi	r30, 0xA6	; 166
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae e6       	ldi	r26, 0x6E	; 110
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 36       	cpi	r26, 0x6F	; 111
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 a5 00 	call	0x14a	; 0x14a <main>
  8a:	0c 94 51 06 	jmp	0xca2	; 0xca2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <initADC>:
#include <stdint.h>
#include <string.h>
#include <stdio.h>

void initADC(void)
{
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
	DDRA &= ~(1<<1);
  9a:	8a e3       	ldi	r24, 0x3A	; 58
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	2a e3       	ldi	r18, 0x3A	; 58
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	f9 01       	movw	r30, r18
  a4:	20 81       	ld	r18, Z
  a6:	2d 7f       	andi	r18, 0xFD	; 253
  a8:	fc 01       	movw	r30, r24
  aa:	20 83       	st	Z, r18
	ADCSRA = (1 << ADEN) | (1 << ADPS1) | (1 << ADPS0);
  ac:	86 e2       	ldi	r24, 0x26	; 38
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	23 e8       	ldi	r18, 0x83	; 131
  b2:	fc 01       	movw	r30, r24
  b4:	20 83       	st	Z, r18
	ADMUX = (1 << REFS0) | 1;
  b6:	87 e2       	ldi	r24, 0x27	; 39
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	21 e4       	ldi	r18, 0x41	; 65
  bc:	fc 01       	movw	r30, r24
  be:	20 83       	st	Z, r18
}
  c0:	00 00       	nop
  c2:	df 91       	pop	r29
  c4:	cf 91       	pop	r28
  c6:	08 95       	ret

000000c8 <readADC>:

uint16_t readADC(void)
{
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	00 d0       	rcall	.+0      	; 0xce <readADC+0x6>
  ce:	00 d0       	rcall	.+0      	; 0xd0 <readADC+0x8>
  d0:	cd b7       	in	r28, 0x3d	; 61
  d2:	de b7       	in	r29, 0x3e	; 62
	uint8_t lsb, msb;
	uint16_t adc_value;
	
	ADCSRA |= (1 << ADSC);
  d4:	86 e2       	ldi	r24, 0x26	; 38
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	26 e2       	ldi	r18, 0x26	; 38
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	f9 01       	movw	r30, r18
  de:	20 81       	ld	r18, Z
  e0:	20 64       	ori	r18, 0x40	; 64
  e2:	fc 01       	movw	r30, r24
  e4:	20 83       	st	Z, r18
	while((ADCSRA & (1 << ADSC)));
  e6:	00 00       	nop
  e8:	86 e2       	ldi	r24, 0x26	; 38
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	fc 01       	movw	r30, r24
  ee:	80 81       	ld	r24, Z
  f0:	88 2f       	mov	r24, r24
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	80 74       	andi	r24, 0x40	; 64
  f6:	99 27       	eor	r25, r25
  f8:	89 2b       	or	r24, r25
  fa:	b1 f7       	brne	.-20     	; 0xe8 <readADC+0x20>
	lsb = ADCL;
  fc:	84 e2       	ldi	r24, 0x24	; 36
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	fc 01       	movw	r30, r24
 102:	80 81       	ld	r24, Z
 104:	89 83       	std	Y+1, r24	; 0x01
	msb = ADCH;
 106:	85 e2       	ldi	r24, 0x25	; 37
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	fc 01       	movw	r30, r24
 10c:	80 81       	ld	r24, Z
 10e:	8a 83       	std	Y+2, r24	; 0x02
	adc_value = msb;
 110:	8a 81       	ldd	r24, Y+2	; 0x02
 112:	88 2f       	mov	r24, r24
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	9c 83       	std	Y+4, r25	; 0x04
 118:	8b 83       	std	Y+3, r24	; 0x03
	adc_value = adc_value << 8;
 11a:	8b 81       	ldd	r24, Y+3	; 0x03
 11c:	9c 81       	ldd	r25, Y+4	; 0x04
 11e:	98 2f       	mov	r25, r24
 120:	88 27       	eor	r24, r24
 122:	9c 83       	std	Y+4, r25	; 0x04
 124:	8b 83       	std	Y+3, r24	; 0x03
	adc_value |= lsb;
 126:	89 81       	ldd	r24, Y+1	; 0x01
 128:	88 2f       	mov	r24, r24
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	2b 81       	ldd	r18, Y+3	; 0x03
 12e:	3c 81       	ldd	r19, Y+4	; 0x04
 130:	82 2b       	or	r24, r18
 132:	93 2b       	or	r25, r19
 134:	9c 83       	std	Y+4, r25	; 0x04
 136:	8b 83       	std	Y+3, r24	; 0x03
	return adc_value;
 138:	8b 81       	ldd	r24, Y+3	; 0x03
 13a:	9c 81       	ldd	r25, Y+4	; 0x04
 13c:	0f 90       	pop	r0
 13e:	0f 90       	pop	r0
 140:	0f 90       	pop	r0
 142:	0f 90       	pop	r0
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <main>:
#include "Adc.h"
#include "Serial.h"


int main(void)
{
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	ca 57       	subi	r28, 0x7A	; 122
 154:	d1 09       	sbc	r29, r1
 156:	0f b6       	in	r0, 0x3f	; 63
 158:	f8 94       	cli
 15a:	de bf       	out	0x3e, r29	; 62
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	cd bf       	out	0x3d, r28	; 61
	initUART();
 160:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <initUART>
	initADC();
 164:	0e 94 49 00 	call	0x92	; 0x92 <initADC>
    while (1) 
    {
		uint32_t value;
		uint32_t readValue;
		char text[100];
		readValue = readADC();
 168:	0e 94 64 00 	call	0xc8	; 0xc8 <readADC>
 16c:	cc 01       	movw	r24, r24
 16e:	a0 e0       	ldi	r26, 0x00	; 0
 170:	b0 e0       	ldi	r27, 0x00	; 0
 172:	89 83       	std	Y+1, r24	; 0x01
 174:	9a 83       	std	Y+2, r25	; 0x02
 176:	ab 83       	std	Y+3, r26	; 0x03
 178:	bc 83       	std	Y+4, r27	; 0x04
		value = readValue * 5000 / 1023;
 17a:	29 81       	ldd	r18, Y+1	; 0x01
 17c:	3a 81       	ldd	r19, Y+2	; 0x02
 17e:	4b 81       	ldd	r20, Y+3	; 0x03
 180:	5c 81       	ldd	r21, Y+4	; 0x04
 182:	88 e8       	ldi	r24, 0x88	; 136
 184:	93 e1       	ldi	r25, 0x13	; 19
 186:	dc 01       	movw	r26, r24
 188:	0e 94 44 03 	call	0x688	; 0x688 <__muluhisi3>
 18c:	dc 01       	movw	r26, r24
 18e:	cb 01       	movw	r24, r22
 190:	2f ef       	ldi	r18, 0xFF	; 255
 192:	33 e0       	ldi	r19, 0x03	; 3
 194:	40 e0       	ldi	r20, 0x00	; 0
 196:	50 e0       	ldi	r21, 0x00	; 0
 198:	bc 01       	movw	r22, r24
 19a:	cd 01       	movw	r24, r26
 19c:	0e 94 22 03 	call	0x644	; 0x644 <__udivmodsi4>
 1a0:	da 01       	movw	r26, r20
 1a2:	c9 01       	movw	r24, r18
 1a4:	8d 83       	std	Y+5, r24	; 0x05
 1a6:	9e 83       	std	Y+6, r25	; 0x06
 1a8:	af 83       	std	Y+7, r26	; 0x07
 1aa:	b8 87       	std	Y+8, r27	; 0x08
		sprintf(text, "ADCvalue %d\n", value);
 1ac:	88 85       	ldd	r24, Y+8	; 0x08
 1ae:	8f 93       	push	r24
 1b0:	8f 81       	ldd	r24, Y+7	; 0x07
 1b2:	8f 93       	push	r24
 1b4:	8e 81       	ldd	r24, Y+6	; 0x06
 1b6:	8f 93       	push	r24
 1b8:	8d 81       	ldd	r24, Y+5	; 0x05
 1ba:	8f 93       	push	r24
 1bc:	80 e6       	ldi	r24, 0x60	; 96
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	89 2f       	mov	r24, r25
 1c2:	8f 93       	push	r24
 1c4:	80 e6       	ldi	r24, 0x60	; 96
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	8f 93       	push	r24
 1ca:	ce 01       	movw	r24, r28
 1cc:	47 96       	adiw	r24, 0x17	; 23
 1ce:	29 2f       	mov	r18, r25
 1d0:	2f 93       	push	r18
 1d2:	8f 93       	push	r24
 1d4:	0e 94 67 03 	call	0x6ce	; 0x6ce <sprintf>
 1d8:	8d b7       	in	r24, 0x3d	; 61
 1da:	9e b7       	in	r25, 0x3e	; 62
 1dc:	08 96       	adiw	r24, 0x08	; 8
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	f8 94       	cli
 1e2:	de bf       	out	0x3e, r29	; 62
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	cd bf       	out	0x3d, r28	; 61
		sendString(text);
 1e8:	ce 01       	movw	r24, r28
 1ea:	47 96       	adiw	r24, 0x17	; 23
 1ec:	0e 94 bd 01 	call	0x37a	; 0x37a <sendString>
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	a8 ec       	ldi	r26, 0xC8	; 200
 1f6:	b2 e4       	ldi	r27, 0x42	; 66
 1f8:	89 87       	std	Y+9, r24	; 0x09
 1fa:	9a 87       	std	Y+10, r25	; 0x0a
 1fc:	ab 87       	std	Y+11, r26	; 0x0b
 1fe:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 200:	26 e6       	ldi	r18, 0x66	; 102
 202:	36 e6       	ldi	r19, 0x66	; 102
 204:	46 e6       	ldi	r20, 0x66	; 102
 206:	55 e4       	ldi	r21, 0x45	; 69
 208:	69 85       	ldd	r22, Y+9	; 0x09
 20a:	7a 85       	ldd	r23, Y+10	; 0x0a
 20c:	8b 85       	ldd	r24, Y+11	; 0x0b
 20e:	9c 85       	ldd	r25, Y+12	; 0x0c
 210:	0e 94 8d 02 	call	0x51a	; 0x51a <__mulsf3>
 214:	dc 01       	movw	r26, r24
 216:	cb 01       	movw	r24, r22
 218:	8d 87       	std	Y+13, r24	; 0x0d
 21a:	9e 87       	std	Y+14, r25	; 0x0e
 21c:	af 87       	std	Y+15, r26	; 0x0f
 21e:	b8 8b       	std	Y+16, r27	; 0x10
	if (__tmp < 1.0)
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	40 e8       	ldi	r20, 0x80	; 128
 226:	5f e3       	ldi	r21, 0x3F	; 63
 228:	6d 85       	ldd	r22, Y+13	; 0x0d
 22a:	7e 85       	ldd	r23, Y+14	; 0x0e
 22c:	8f 85       	ldd	r24, Y+15	; 0x0f
 22e:	98 89       	ldd	r25, Y+16	; 0x10
 230:	0e 94 07 02 	call	0x40e	; 0x40e <__cmpsf2>
 234:	88 23       	and	r24, r24
 236:	2c f4       	brge	.+10     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
		__ticks = 1;
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	9a 8b       	std	Y+18, r25	; 0x12
 23e:	89 8b       	std	Y+17, r24	; 0x11
 240:	3f c0       	rjmp	.+126    	; 0x2c0 <__EEPROM_REGION_LENGTH__+0xc0>
	else if (__tmp > 65535)
 242:	20 e0       	ldi	r18, 0x00	; 0
 244:	3f ef       	ldi	r19, 0xFF	; 255
 246:	4f e7       	ldi	r20, 0x7F	; 127
 248:	57 e4       	ldi	r21, 0x47	; 71
 24a:	6d 85       	ldd	r22, Y+13	; 0x0d
 24c:	7e 85       	ldd	r23, Y+14	; 0x0e
 24e:	8f 85       	ldd	r24, Y+15	; 0x0f
 250:	98 89       	ldd	r25, Y+16	; 0x10
 252:	0e 94 88 02 	call	0x510	; 0x510 <__gesf2>
 256:	18 16       	cp	r1, r24
 258:	4c f5       	brge	.+82     	; 0x2ac <__EEPROM_REGION_LENGTH__+0xac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 25a:	20 e0       	ldi	r18, 0x00	; 0
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	40 e2       	ldi	r20, 0x20	; 32
 260:	51 e4       	ldi	r21, 0x41	; 65
 262:	69 85       	ldd	r22, Y+9	; 0x09
 264:	7a 85       	ldd	r23, Y+10	; 0x0a
 266:	8b 85       	ldd	r24, Y+11	; 0x0b
 268:	9c 85       	ldd	r25, Y+12	; 0x0c
 26a:	0e 94 8d 02 	call	0x51a	; 0x51a <__mulsf3>
 26e:	dc 01       	movw	r26, r24
 270:	cb 01       	movw	r24, r22
 272:	bc 01       	movw	r22, r24
 274:	cd 01       	movw	r24, r26
 276:	0e 94 0c 02 	call	0x418	; 0x418 <__fixunssfsi>
 27a:	dc 01       	movw	r26, r24
 27c:	cb 01       	movw	r24, r22
 27e:	9a 8b       	std	Y+18, r25	; 0x12
 280:	89 8b       	std	Y+17, r24	; 0x11
 282:	0f c0       	rjmp	.+30     	; 0x2a2 <__EEPROM_REGION_LENGTH__+0xa2>
 284:	80 e7       	ldi	r24, 0x70	; 112
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	9c 8b       	std	Y+20, r25	; 0x14
 28a:	8b 8b       	std	Y+19, r24	; 0x13
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 28c:	8b 89       	ldd	r24, Y+19	; 0x13
 28e:	9c 89       	ldd	r25, Y+20	; 0x14
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <__EEPROM_REGION_LENGTH__+0x90>
 294:	9c 8b       	std	Y+20, r25	; 0x14
 296:	8b 8b       	std	Y+19, r24	; 0x13
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 298:	89 89       	ldd	r24, Y+17	; 0x11
 29a:	9a 89       	ldd	r25, Y+18	; 0x12
 29c:	01 97       	sbiw	r24, 0x01	; 1
 29e:	9a 8b       	std	Y+18, r25	; 0x12
 2a0:	89 8b       	std	Y+17, r24	; 0x11
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2a2:	89 89       	ldd	r24, Y+17	; 0x11
 2a4:	9a 89       	ldd	r25, Y+18	; 0x12
 2a6:	89 2b       	or	r24, r25
 2a8:	69 f7       	brne	.-38     	; 0x284 <__EEPROM_REGION_LENGTH__+0x84>
 2aa:	14 c0       	rjmp	.+40     	; 0x2d4 <__EEPROM_REGION_LENGTH__+0xd4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 2ac:	6d 85       	ldd	r22, Y+13	; 0x0d
 2ae:	7e 85       	ldd	r23, Y+14	; 0x0e
 2b0:	8f 85       	ldd	r24, Y+15	; 0x0f
 2b2:	98 89       	ldd	r25, Y+16	; 0x10
 2b4:	0e 94 0c 02 	call	0x418	; 0x418 <__fixunssfsi>
 2b8:	dc 01       	movw	r26, r24
 2ba:	cb 01       	movw	r24, r22
 2bc:	9a 8b       	std	Y+18, r25	; 0x12
 2be:	89 8b       	std	Y+17, r24	; 0x11
 2c0:	89 89       	ldd	r24, Y+17	; 0x11
 2c2:	9a 89       	ldd	r25, Y+18	; 0x12
 2c4:	9e 8b       	std	Y+22, r25	; 0x16
 2c6:	8d 8b       	std	Y+21, r24	; 0x15
 2c8:	8d 89       	ldd	r24, Y+21	; 0x15
 2ca:	9e 89       	ldd	r25, Y+22	; 0x16
 2cc:	01 97       	sbiw	r24, 0x01	; 1
 2ce:	f1 f7       	brne	.-4      	; 0x2cc <__EEPROM_REGION_LENGTH__+0xcc>
 2d0:	9e 8b       	std	Y+22, r25	; 0x16
 2d2:	8d 8b       	std	Y+21, r24	; 0x15
		_delay_ms(100);
    }
 2d4:	49 cf       	rjmp	.-366    	; 0x168 <main+0x1e>

000002d6 <initUART>:
{
	uint8_t ch;
	while(!(UCSRA & (1 << RXC)));
	ch = UDR;
	return ch;
}
 2d6:	cf 93       	push	r28
 2d8:	df 93       	push	r29
 2da:	00 d0       	rcall	.+0      	; 0x2dc <initUART+0x6>
 2dc:	cd b7       	in	r28, 0x3d	; 61
 2de:	de b7       	in	r29, 0x3e	; 62
 2e0:	87 e0       	ldi	r24, 0x07	; 7
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	9a 83       	std	Y+2, r25	; 0x02
 2e6:	89 83       	std	Y+1, r24	; 0x01
 2e8:	81 e3       	ldi	r24, 0x31	; 49
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	21 e3       	ldi	r18, 0x31	; 49
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	f9 01       	movw	r30, r18
 2f2:	20 81       	ld	r18, Z
 2f4:	22 60       	ori	r18, 0x02	; 2
 2f6:	fc 01       	movw	r30, r24
 2f8:	20 83       	st	Z, r18
 2fa:	80 e4       	ldi	r24, 0x40	; 64
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	29 81       	ldd	r18, Y+1	; 0x01
 300:	3a 81       	ldd	r19, Y+2	; 0x02
 302:	23 2f       	mov	r18, r19
 304:	33 27       	eor	r19, r19
 306:	fc 01       	movw	r30, r24
 308:	20 83       	st	Z, r18
 30a:	89 e2       	ldi	r24, 0x29	; 41
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	29 81       	ldd	r18, Y+1	; 0x01
 310:	fc 01       	movw	r30, r24
 312:	20 83       	st	Z, r18
 314:	8a e2       	ldi	r24, 0x2A	; 42
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	2a e2       	ldi	r18, 0x2A	; 42
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	f9 01       	movw	r30, r18
 31e:	20 81       	ld	r18, Z
 320:	28 69       	ori	r18, 0x98	; 152
 322:	fc 01       	movw	r30, r24
 324:	20 83       	st	Z, r18
 326:	80 e4       	ldi	r24, 0x40	; 64
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	20 e4       	ldi	r18, 0x40	; 64
 32c:	30 e0       	ldi	r19, 0x00	; 0
 32e:	f9 01       	movw	r30, r18
 330:	20 81       	ld	r18, Z
 332:	26 68       	ori	r18, 0x86	; 134
 334:	fc 01       	movw	r30, r24
 336:	20 83       	st	Z, r18
 338:	00 00       	nop
 33a:	0f 90       	pop	r0
 33c:	0f 90       	pop	r0
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	08 95       	ret

00000344 <sendCharacter>:
 344:	cf 93       	push	r28
 346:	df 93       	push	r29
 348:	1f 92       	push	r1
 34a:	cd b7       	in	r28, 0x3d	; 61
 34c:	de b7       	in	r29, 0x3e	; 62
 34e:	89 83       	std	Y+1, r24	; 0x01
 350:	00 00       	nop
 352:	8b e2       	ldi	r24, 0x2B	; 43
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	fc 01       	movw	r30, r24
 358:	80 81       	ld	r24, Z
 35a:	88 2f       	mov	r24, r24
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	80 72       	andi	r24, 0x20	; 32
 360:	99 27       	eor	r25, r25
 362:	89 2b       	or	r24, r25
 364:	b1 f3       	breq	.-20     	; 0x352 <sendCharacter+0xe>
 366:	8c e2       	ldi	r24, 0x2C	; 44
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	29 81       	ldd	r18, Y+1	; 0x01
 36c:	fc 01       	movw	r30, r24
 36e:	20 83       	st	Z, r18
 370:	00 00       	nop
 372:	0f 90       	pop	r0
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	08 95       	ret

0000037a <sendString>:
 37a:	cf 93       	push	r28
 37c:	df 93       	push	r29
 37e:	00 d0       	rcall	.+0      	; 0x380 <sendString+0x6>
 380:	00 d0       	rcall	.+0      	; 0x382 <sendString+0x8>
 382:	00 d0       	rcall	.+0      	; 0x384 <sendString+0xa>
 384:	cd b7       	in	r28, 0x3d	; 61
 386:	de b7       	in	r29, 0x3e	; 62
 388:	9e 83       	std	Y+6, r25	; 0x06
 38a:	8d 83       	std	Y+5, r24	; 0x05
 38c:	8d 81       	ldd	r24, Y+5	; 0x05
 38e:	9e 81       	ldd	r25, Y+6	; 0x06
 390:	0e 94 5e 03 	call	0x6bc	; 0x6bc <strlen>
 394:	9c 83       	std	Y+4, r25	; 0x04
 396:	8b 83       	std	Y+3, r24	; 0x03
 398:	1a 82       	std	Y+2, r1	; 0x02
 39a:	19 82       	std	Y+1, r1	; 0x01
 39c:	0f c0       	rjmp	.+30     	; 0x3bc <sendString+0x42>
 39e:	2d 81       	ldd	r18, Y+5	; 0x05
 3a0:	3e 81       	ldd	r19, Y+6	; 0x06
 3a2:	89 81       	ldd	r24, Y+1	; 0x01
 3a4:	9a 81       	ldd	r25, Y+2	; 0x02
 3a6:	82 0f       	add	r24, r18
 3a8:	93 1f       	adc	r25, r19
 3aa:	fc 01       	movw	r30, r24
 3ac:	80 81       	ld	r24, Z
 3ae:	0e 94 a2 01 	call	0x344	; 0x344 <sendCharacter>
 3b2:	89 81       	ldd	r24, Y+1	; 0x01
 3b4:	9a 81       	ldd	r25, Y+2	; 0x02
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	9a 83       	std	Y+2, r25	; 0x02
 3ba:	89 83       	std	Y+1, r24	; 0x01
 3bc:	29 81       	ldd	r18, Y+1	; 0x01
 3be:	3a 81       	ldd	r19, Y+2	; 0x02
 3c0:	8b 81       	ldd	r24, Y+3	; 0x03
 3c2:	9c 81       	ldd	r25, Y+4	; 0x04
 3c4:	28 17       	cp	r18, r24
 3c6:	39 07       	cpc	r19, r25
 3c8:	50 f3       	brcs	.-44     	; 0x39e <sendString+0x24>
 3ca:	00 00       	nop
 3cc:	26 96       	adiw	r28, 0x06	; 6
 3ce:	0f b6       	in	r0, 0x3f	; 63
 3d0:	f8 94       	cli
 3d2:	de bf       	out	0x3e, r29	; 62
 3d4:	0f be       	out	0x3f, r0	; 63
 3d6:	cd bf       	out	0x3d, r28	; 61
 3d8:	df 91       	pop	r29
 3da:	cf 91       	pop	r28
 3dc:	08 95       	ret

000003de <__vector_11>:

ISR(USART_RXC_vect)
{
 3de:	1f 92       	push	r1
 3e0:	0f 92       	push	r0
 3e2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
 3e6:	0f 92       	push	r0
 3e8:	11 24       	eor	r1, r1
 3ea:	8f 93       	push	r24
 3ec:	cf 93       	push	r28
 3ee:	df 93       	push	r29
 3f0:	cd b7       	in	r28, 0x3d	; 61
 3f2:	de b7       	in	r29, 0x3e	; 62
	flag = 1;
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__data_end>
 3fa:	00 00       	nop
 3fc:	df 91       	pop	r29
 3fe:	cf 91       	pop	r28
 400:	8f 91       	pop	r24
 402:	0f 90       	pop	r0
 404:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
 408:	0f 90       	pop	r0
 40a:	1f 90       	pop	r1
 40c:	18 95       	reti

0000040e <__cmpsf2>:
 40e:	0e 94 3b 02 	call	0x476	; 0x476 <__fp_cmp>
 412:	08 f4       	brcc	.+2      	; 0x416 <__cmpsf2+0x8>
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	08 95       	ret

00000418 <__fixunssfsi>:
 418:	0e 94 67 02 	call	0x4ce	; 0x4ce <__fp_splitA>
 41c:	88 f0       	brcs	.+34     	; 0x440 <__fixunssfsi+0x28>
 41e:	9f 57       	subi	r25, 0x7F	; 127
 420:	98 f0       	brcs	.+38     	; 0x448 <__fixunssfsi+0x30>
 422:	b9 2f       	mov	r27, r25
 424:	99 27       	eor	r25, r25
 426:	b7 51       	subi	r27, 0x17	; 23
 428:	b0 f0       	brcs	.+44     	; 0x456 <__fixunssfsi+0x3e>
 42a:	e1 f0       	breq	.+56     	; 0x464 <__stack+0x5>
 42c:	66 0f       	add	r22, r22
 42e:	77 1f       	adc	r23, r23
 430:	88 1f       	adc	r24, r24
 432:	99 1f       	adc	r25, r25
 434:	1a f0       	brmi	.+6      	; 0x43c <__fixunssfsi+0x24>
 436:	ba 95       	dec	r27
 438:	c9 f7       	brne	.-14     	; 0x42c <__fixunssfsi+0x14>
 43a:	14 c0       	rjmp	.+40     	; 0x464 <__stack+0x5>
 43c:	b1 30       	cpi	r27, 0x01	; 1
 43e:	91 f0       	breq	.+36     	; 0x464 <__stack+0x5>
 440:	0e 94 81 02 	call	0x502	; 0x502 <__fp_zero>
 444:	b1 e0       	ldi	r27, 0x01	; 1
 446:	08 95       	ret
 448:	0c 94 81 02 	jmp	0x502	; 0x502 <__fp_zero>
 44c:	67 2f       	mov	r22, r23
 44e:	78 2f       	mov	r23, r24
 450:	88 27       	eor	r24, r24
 452:	b8 5f       	subi	r27, 0xF8	; 248
 454:	39 f0       	breq	.+14     	; 0x464 <__stack+0x5>
 456:	b9 3f       	cpi	r27, 0xF9	; 249
 458:	cc f3       	brlt	.-14     	; 0x44c <__fixunssfsi+0x34>
 45a:	86 95       	lsr	r24
 45c:	77 95       	ror	r23
 45e:	67 95       	ror	r22
 460:	b3 95       	inc	r27
 462:	d9 f7       	brne	.-10     	; 0x45a <__fixunssfsi+0x42>
 464:	3e f4       	brtc	.+14     	; 0x474 <__stack+0x15>
 466:	90 95       	com	r25
 468:	80 95       	com	r24
 46a:	70 95       	com	r23
 46c:	61 95       	neg	r22
 46e:	7f 4f       	sbci	r23, 0xFF	; 255
 470:	8f 4f       	sbci	r24, 0xFF	; 255
 472:	9f 4f       	sbci	r25, 0xFF	; 255
 474:	08 95       	ret

00000476 <__fp_cmp>:
 476:	99 0f       	add	r25, r25
 478:	00 08       	sbc	r0, r0
 47a:	55 0f       	add	r21, r21
 47c:	aa 0b       	sbc	r26, r26
 47e:	e0 e8       	ldi	r30, 0x80	; 128
 480:	fe ef       	ldi	r31, 0xFE	; 254
 482:	16 16       	cp	r1, r22
 484:	17 06       	cpc	r1, r23
 486:	e8 07       	cpc	r30, r24
 488:	f9 07       	cpc	r31, r25
 48a:	c0 f0       	brcs	.+48     	; 0x4bc <__fp_cmp+0x46>
 48c:	12 16       	cp	r1, r18
 48e:	13 06       	cpc	r1, r19
 490:	e4 07       	cpc	r30, r20
 492:	f5 07       	cpc	r31, r21
 494:	98 f0       	brcs	.+38     	; 0x4bc <__fp_cmp+0x46>
 496:	62 1b       	sub	r22, r18
 498:	73 0b       	sbc	r23, r19
 49a:	84 0b       	sbc	r24, r20
 49c:	95 0b       	sbc	r25, r21
 49e:	39 f4       	brne	.+14     	; 0x4ae <__fp_cmp+0x38>
 4a0:	0a 26       	eor	r0, r26
 4a2:	61 f0       	breq	.+24     	; 0x4bc <__fp_cmp+0x46>
 4a4:	23 2b       	or	r18, r19
 4a6:	24 2b       	or	r18, r20
 4a8:	25 2b       	or	r18, r21
 4aa:	21 f4       	brne	.+8      	; 0x4b4 <__fp_cmp+0x3e>
 4ac:	08 95       	ret
 4ae:	0a 26       	eor	r0, r26
 4b0:	09 f4       	brne	.+2      	; 0x4b4 <__fp_cmp+0x3e>
 4b2:	a1 40       	sbci	r26, 0x01	; 1
 4b4:	a6 95       	lsr	r26
 4b6:	8f ef       	ldi	r24, 0xFF	; 255
 4b8:	81 1d       	adc	r24, r1
 4ba:	81 1d       	adc	r24, r1
 4bc:	08 95       	ret

000004be <__fp_split3>:
 4be:	57 fd       	sbrc	r21, 7
 4c0:	90 58       	subi	r25, 0x80	; 128
 4c2:	44 0f       	add	r20, r20
 4c4:	55 1f       	adc	r21, r21
 4c6:	59 f0       	breq	.+22     	; 0x4de <__fp_splitA+0x10>
 4c8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ca:	71 f0       	breq	.+28     	; 0x4e8 <__fp_splitA+0x1a>
 4cc:	47 95       	ror	r20

000004ce <__fp_splitA>:
 4ce:	88 0f       	add	r24, r24
 4d0:	97 fb       	bst	r25, 7
 4d2:	99 1f       	adc	r25, r25
 4d4:	61 f0       	breq	.+24     	; 0x4ee <__fp_splitA+0x20>
 4d6:	9f 3f       	cpi	r25, 0xFF	; 255
 4d8:	79 f0       	breq	.+30     	; 0x4f8 <__fp_splitA+0x2a>
 4da:	87 95       	ror	r24
 4dc:	08 95       	ret
 4de:	12 16       	cp	r1, r18
 4e0:	13 06       	cpc	r1, r19
 4e2:	14 06       	cpc	r1, r20
 4e4:	55 1f       	adc	r21, r21
 4e6:	f2 cf       	rjmp	.-28     	; 0x4cc <__fp_split3+0xe>
 4e8:	46 95       	lsr	r20
 4ea:	f1 df       	rcall	.-30     	; 0x4ce <__fp_splitA>
 4ec:	08 c0       	rjmp	.+16     	; 0x4fe <__fp_splitA+0x30>
 4ee:	16 16       	cp	r1, r22
 4f0:	17 06       	cpc	r1, r23
 4f2:	18 06       	cpc	r1, r24
 4f4:	99 1f       	adc	r25, r25
 4f6:	f1 cf       	rjmp	.-30     	; 0x4da <__fp_splitA+0xc>
 4f8:	86 95       	lsr	r24
 4fa:	71 05       	cpc	r23, r1
 4fc:	61 05       	cpc	r22, r1
 4fe:	08 94       	sec
 500:	08 95       	ret

00000502 <__fp_zero>:
 502:	e8 94       	clt

00000504 <__fp_szero>:
 504:	bb 27       	eor	r27, r27
 506:	66 27       	eor	r22, r22
 508:	77 27       	eor	r23, r23
 50a:	cb 01       	movw	r24, r22
 50c:	97 f9       	bld	r25, 7
 50e:	08 95       	ret

00000510 <__gesf2>:
 510:	0e 94 3b 02 	call	0x476	; 0x476 <__fp_cmp>
 514:	08 f4       	brcc	.+2      	; 0x518 <__gesf2+0x8>
 516:	8f ef       	ldi	r24, 0xFF	; 255
 518:	08 95       	ret

0000051a <__mulsf3>:
 51a:	0e 94 a0 02 	call	0x540	; 0x540 <__mulsf3x>
 51e:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_round>
 522:	0e 94 03 03 	call	0x606	; 0x606 <__fp_pscA>
 526:	38 f0       	brcs	.+14     	; 0x536 <__mulsf3+0x1c>
 528:	0e 94 0a 03 	call	0x614	; 0x614 <__fp_pscB>
 52c:	20 f0       	brcs	.+8      	; 0x536 <__mulsf3+0x1c>
 52e:	95 23       	and	r25, r21
 530:	11 f0       	breq	.+4      	; 0x536 <__mulsf3+0x1c>
 532:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_inf>
 536:	0c 94 00 03 	jmp	0x600	; 0x600 <__fp_nan>
 53a:	11 24       	eor	r1, r1
 53c:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_szero>

00000540 <__mulsf3x>:
 540:	0e 94 5f 02 	call	0x4be	; 0x4be <__fp_split3>
 544:	70 f3       	brcs	.-36     	; 0x522 <__mulsf3+0x8>

00000546 <__mulsf3_pse>:
 546:	95 9f       	mul	r25, r21
 548:	c1 f3       	breq	.-16     	; 0x53a <__mulsf3+0x20>
 54a:	95 0f       	add	r25, r21
 54c:	50 e0       	ldi	r21, 0x00	; 0
 54e:	55 1f       	adc	r21, r21
 550:	62 9f       	mul	r22, r18
 552:	f0 01       	movw	r30, r0
 554:	72 9f       	mul	r23, r18
 556:	bb 27       	eor	r27, r27
 558:	f0 0d       	add	r31, r0
 55a:	b1 1d       	adc	r27, r1
 55c:	63 9f       	mul	r22, r19
 55e:	aa 27       	eor	r26, r26
 560:	f0 0d       	add	r31, r0
 562:	b1 1d       	adc	r27, r1
 564:	aa 1f       	adc	r26, r26
 566:	64 9f       	mul	r22, r20
 568:	66 27       	eor	r22, r22
 56a:	b0 0d       	add	r27, r0
 56c:	a1 1d       	adc	r26, r1
 56e:	66 1f       	adc	r22, r22
 570:	82 9f       	mul	r24, r18
 572:	22 27       	eor	r18, r18
 574:	b0 0d       	add	r27, r0
 576:	a1 1d       	adc	r26, r1
 578:	62 1f       	adc	r22, r18
 57a:	73 9f       	mul	r23, r19
 57c:	b0 0d       	add	r27, r0
 57e:	a1 1d       	adc	r26, r1
 580:	62 1f       	adc	r22, r18
 582:	83 9f       	mul	r24, r19
 584:	a0 0d       	add	r26, r0
 586:	61 1d       	adc	r22, r1
 588:	22 1f       	adc	r18, r18
 58a:	74 9f       	mul	r23, r20
 58c:	33 27       	eor	r19, r19
 58e:	a0 0d       	add	r26, r0
 590:	61 1d       	adc	r22, r1
 592:	23 1f       	adc	r18, r19
 594:	84 9f       	mul	r24, r20
 596:	60 0d       	add	r22, r0
 598:	21 1d       	adc	r18, r1
 59a:	82 2f       	mov	r24, r18
 59c:	76 2f       	mov	r23, r22
 59e:	6a 2f       	mov	r22, r26
 5a0:	11 24       	eor	r1, r1
 5a2:	9f 57       	subi	r25, 0x7F	; 127
 5a4:	50 40       	sbci	r21, 0x00	; 0
 5a6:	9a f0       	brmi	.+38     	; 0x5ce <__mulsf3_pse+0x88>
 5a8:	f1 f0       	breq	.+60     	; 0x5e6 <__mulsf3_pse+0xa0>
 5aa:	88 23       	and	r24, r24
 5ac:	4a f0       	brmi	.+18     	; 0x5c0 <__mulsf3_pse+0x7a>
 5ae:	ee 0f       	add	r30, r30
 5b0:	ff 1f       	adc	r31, r31
 5b2:	bb 1f       	adc	r27, r27
 5b4:	66 1f       	adc	r22, r22
 5b6:	77 1f       	adc	r23, r23
 5b8:	88 1f       	adc	r24, r24
 5ba:	91 50       	subi	r25, 0x01	; 1
 5bc:	50 40       	sbci	r21, 0x00	; 0
 5be:	a9 f7       	brne	.-22     	; 0x5aa <__mulsf3_pse+0x64>
 5c0:	9e 3f       	cpi	r25, 0xFE	; 254
 5c2:	51 05       	cpc	r21, r1
 5c4:	80 f0       	brcs	.+32     	; 0x5e6 <__mulsf3_pse+0xa0>
 5c6:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_inf>
 5ca:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_szero>
 5ce:	5f 3f       	cpi	r21, 0xFF	; 255
 5d0:	e4 f3       	brlt	.-8      	; 0x5ca <__mulsf3_pse+0x84>
 5d2:	98 3e       	cpi	r25, 0xE8	; 232
 5d4:	d4 f3       	brlt	.-12     	; 0x5ca <__mulsf3_pse+0x84>
 5d6:	86 95       	lsr	r24
 5d8:	77 95       	ror	r23
 5da:	67 95       	ror	r22
 5dc:	b7 95       	ror	r27
 5de:	f7 95       	ror	r31
 5e0:	e7 95       	ror	r30
 5e2:	9f 5f       	subi	r25, 0xFF	; 255
 5e4:	c1 f7       	brne	.-16     	; 0x5d6 <__mulsf3_pse+0x90>
 5e6:	fe 2b       	or	r31, r30
 5e8:	88 0f       	add	r24, r24
 5ea:	91 1d       	adc	r25, r1
 5ec:	96 95       	lsr	r25
 5ee:	87 95       	ror	r24
 5f0:	97 f9       	bld	r25, 7
 5f2:	08 95       	ret

000005f4 <__fp_inf>:
 5f4:	97 f9       	bld	r25, 7
 5f6:	9f 67       	ori	r25, 0x7F	; 127
 5f8:	80 e8       	ldi	r24, 0x80	; 128
 5fa:	70 e0       	ldi	r23, 0x00	; 0
 5fc:	60 e0       	ldi	r22, 0x00	; 0
 5fe:	08 95       	ret

00000600 <__fp_nan>:
 600:	9f ef       	ldi	r25, 0xFF	; 255
 602:	80 ec       	ldi	r24, 0xC0	; 192
 604:	08 95       	ret

00000606 <__fp_pscA>:
 606:	00 24       	eor	r0, r0
 608:	0a 94       	dec	r0
 60a:	16 16       	cp	r1, r22
 60c:	17 06       	cpc	r1, r23
 60e:	18 06       	cpc	r1, r24
 610:	09 06       	cpc	r0, r25
 612:	08 95       	ret

00000614 <__fp_pscB>:
 614:	00 24       	eor	r0, r0
 616:	0a 94       	dec	r0
 618:	12 16       	cp	r1, r18
 61a:	13 06       	cpc	r1, r19
 61c:	14 06       	cpc	r1, r20
 61e:	05 06       	cpc	r0, r21
 620:	08 95       	ret

00000622 <__fp_round>:
 622:	09 2e       	mov	r0, r25
 624:	03 94       	inc	r0
 626:	00 0c       	add	r0, r0
 628:	11 f4       	brne	.+4      	; 0x62e <__fp_round+0xc>
 62a:	88 23       	and	r24, r24
 62c:	52 f0       	brmi	.+20     	; 0x642 <__fp_round+0x20>
 62e:	bb 0f       	add	r27, r27
 630:	40 f4       	brcc	.+16     	; 0x642 <__fp_round+0x20>
 632:	bf 2b       	or	r27, r31
 634:	11 f4       	brne	.+4      	; 0x63a <__fp_round+0x18>
 636:	60 ff       	sbrs	r22, 0
 638:	04 c0       	rjmp	.+8      	; 0x642 <__fp_round+0x20>
 63a:	6f 5f       	subi	r22, 0xFF	; 255
 63c:	7f 4f       	sbci	r23, 0xFF	; 255
 63e:	8f 4f       	sbci	r24, 0xFF	; 255
 640:	9f 4f       	sbci	r25, 0xFF	; 255
 642:	08 95       	ret

00000644 <__udivmodsi4>:
 644:	a1 e2       	ldi	r26, 0x21	; 33
 646:	1a 2e       	mov	r1, r26
 648:	aa 1b       	sub	r26, r26
 64a:	bb 1b       	sub	r27, r27
 64c:	fd 01       	movw	r30, r26
 64e:	0d c0       	rjmp	.+26     	; 0x66a <__udivmodsi4_ep>

00000650 <__udivmodsi4_loop>:
 650:	aa 1f       	adc	r26, r26
 652:	bb 1f       	adc	r27, r27
 654:	ee 1f       	adc	r30, r30
 656:	ff 1f       	adc	r31, r31
 658:	a2 17       	cp	r26, r18
 65a:	b3 07       	cpc	r27, r19
 65c:	e4 07       	cpc	r30, r20
 65e:	f5 07       	cpc	r31, r21
 660:	20 f0       	brcs	.+8      	; 0x66a <__udivmodsi4_ep>
 662:	a2 1b       	sub	r26, r18
 664:	b3 0b       	sbc	r27, r19
 666:	e4 0b       	sbc	r30, r20
 668:	f5 0b       	sbc	r31, r21

0000066a <__udivmodsi4_ep>:
 66a:	66 1f       	adc	r22, r22
 66c:	77 1f       	adc	r23, r23
 66e:	88 1f       	adc	r24, r24
 670:	99 1f       	adc	r25, r25
 672:	1a 94       	dec	r1
 674:	69 f7       	brne	.-38     	; 0x650 <__udivmodsi4_loop>
 676:	60 95       	com	r22
 678:	70 95       	com	r23
 67a:	80 95       	com	r24
 67c:	90 95       	com	r25
 67e:	9b 01       	movw	r18, r22
 680:	ac 01       	movw	r20, r24
 682:	bd 01       	movw	r22, r26
 684:	cf 01       	movw	r24, r30
 686:	08 95       	ret

00000688 <__muluhisi3>:
 688:	0e 94 4f 03 	call	0x69e	; 0x69e <__umulhisi3>
 68c:	a5 9f       	mul	r26, r21
 68e:	90 0d       	add	r25, r0
 690:	b4 9f       	mul	r27, r20
 692:	90 0d       	add	r25, r0
 694:	a4 9f       	mul	r26, r20
 696:	80 0d       	add	r24, r0
 698:	91 1d       	adc	r25, r1
 69a:	11 24       	eor	r1, r1
 69c:	08 95       	ret

0000069e <__umulhisi3>:
 69e:	a2 9f       	mul	r26, r18
 6a0:	b0 01       	movw	r22, r0
 6a2:	b3 9f       	mul	r27, r19
 6a4:	c0 01       	movw	r24, r0
 6a6:	a3 9f       	mul	r26, r19
 6a8:	70 0d       	add	r23, r0
 6aa:	81 1d       	adc	r24, r1
 6ac:	11 24       	eor	r1, r1
 6ae:	91 1d       	adc	r25, r1
 6b0:	b2 9f       	mul	r27, r18
 6b2:	70 0d       	add	r23, r0
 6b4:	81 1d       	adc	r24, r1
 6b6:	11 24       	eor	r1, r1
 6b8:	91 1d       	adc	r25, r1
 6ba:	08 95       	ret

000006bc <strlen>:
 6bc:	fc 01       	movw	r30, r24
 6be:	01 90       	ld	r0, Z+
 6c0:	00 20       	and	r0, r0
 6c2:	e9 f7       	brne	.-6      	; 0x6be <strlen+0x2>
 6c4:	80 95       	com	r24
 6c6:	90 95       	com	r25
 6c8:	8e 0f       	add	r24, r30
 6ca:	9f 1f       	adc	r25, r31
 6cc:	08 95       	ret

000006ce <sprintf>:
 6ce:	ae e0       	ldi	r26, 0x0E	; 14
 6d0:	b0 e0       	ldi	r27, 0x00	; 0
 6d2:	ed e6       	ldi	r30, 0x6D	; 109
 6d4:	f3 e0       	ldi	r31, 0x03	; 3
 6d6:	0c 94 28 06 	jmp	0xc50	; 0xc50 <__prologue_saves__+0x1c>
 6da:	0d 89       	ldd	r16, Y+21	; 0x15
 6dc:	1e 89       	ldd	r17, Y+22	; 0x16
 6de:	86 e0       	ldi	r24, 0x06	; 6
 6e0:	8c 83       	std	Y+4, r24	; 0x04
 6e2:	1a 83       	std	Y+2, r17	; 0x02
 6e4:	09 83       	std	Y+1, r16	; 0x01
 6e6:	8f ef       	ldi	r24, 0xFF	; 255
 6e8:	9f e7       	ldi	r25, 0x7F	; 127
 6ea:	9e 83       	std	Y+6, r25	; 0x06
 6ec:	8d 83       	std	Y+5, r24	; 0x05
 6ee:	ae 01       	movw	r20, r28
 6f0:	47 5e       	subi	r20, 0xE7	; 231
 6f2:	5f 4f       	sbci	r21, 0xFF	; 255
 6f4:	6f 89       	ldd	r22, Y+23	; 0x17
 6f6:	78 8d       	ldd	r23, Y+24	; 0x18
 6f8:	ce 01       	movw	r24, r28
 6fa:	01 96       	adiw	r24, 0x01	; 1
 6fc:	0e 94 89 03 	call	0x712	; 0x712 <vfprintf>
 700:	ef 81       	ldd	r30, Y+7	; 0x07
 702:	f8 85       	ldd	r31, Y+8	; 0x08
 704:	e0 0f       	add	r30, r16
 706:	f1 1f       	adc	r31, r17
 708:	10 82       	st	Z, r1
 70a:	2e 96       	adiw	r28, 0x0e	; 14
 70c:	e4 e0       	ldi	r30, 0x04	; 4
 70e:	0c 94 44 06 	jmp	0xc88	; 0xc88 <__epilogue_restores__+0x1c>

00000712 <vfprintf>:
 712:	ab e0       	ldi	r26, 0x0B	; 11
 714:	b0 e0       	ldi	r27, 0x00	; 0
 716:	ef e8       	ldi	r30, 0x8F	; 143
 718:	f3 e0       	ldi	r31, 0x03	; 3
 71a:	0c 94 1a 06 	jmp	0xc34	; 0xc34 <__prologue_saves__>
 71e:	6c 01       	movw	r12, r24
 720:	7b 01       	movw	r14, r22
 722:	8a 01       	movw	r16, r20
 724:	fc 01       	movw	r30, r24
 726:	17 82       	std	Z+7, r1	; 0x07
 728:	16 82       	std	Z+6, r1	; 0x06
 72a:	83 81       	ldd	r24, Z+3	; 0x03
 72c:	81 ff       	sbrs	r24, 1
 72e:	cc c1       	rjmp	.+920    	; 0xac8 <vfprintf+0x3b6>
 730:	ce 01       	movw	r24, r28
 732:	01 96       	adiw	r24, 0x01	; 1
 734:	3c 01       	movw	r6, r24
 736:	f6 01       	movw	r30, r12
 738:	93 81       	ldd	r25, Z+3	; 0x03
 73a:	f7 01       	movw	r30, r14
 73c:	93 fd       	sbrc	r25, 3
 73e:	85 91       	lpm	r24, Z+
 740:	93 ff       	sbrs	r25, 3
 742:	81 91       	ld	r24, Z+
 744:	7f 01       	movw	r14, r30
 746:	88 23       	and	r24, r24
 748:	09 f4       	brne	.+2      	; 0x74c <vfprintf+0x3a>
 74a:	ba c1       	rjmp	.+884    	; 0xac0 <vfprintf+0x3ae>
 74c:	85 32       	cpi	r24, 0x25	; 37
 74e:	39 f4       	brne	.+14     	; 0x75e <vfprintf+0x4c>
 750:	93 fd       	sbrc	r25, 3
 752:	85 91       	lpm	r24, Z+
 754:	93 ff       	sbrs	r25, 3
 756:	81 91       	ld	r24, Z+
 758:	7f 01       	movw	r14, r30
 75a:	85 32       	cpi	r24, 0x25	; 37
 75c:	29 f4       	brne	.+10     	; 0x768 <vfprintf+0x56>
 75e:	b6 01       	movw	r22, r12
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 766:	e7 cf       	rjmp	.-50     	; 0x736 <vfprintf+0x24>
 768:	91 2c       	mov	r9, r1
 76a:	21 2c       	mov	r2, r1
 76c:	31 2c       	mov	r3, r1
 76e:	ff e1       	ldi	r31, 0x1F	; 31
 770:	f3 15       	cp	r31, r3
 772:	d8 f0       	brcs	.+54     	; 0x7aa <vfprintf+0x98>
 774:	8b 32       	cpi	r24, 0x2B	; 43
 776:	79 f0       	breq	.+30     	; 0x796 <vfprintf+0x84>
 778:	38 f4       	brcc	.+14     	; 0x788 <vfprintf+0x76>
 77a:	80 32       	cpi	r24, 0x20	; 32
 77c:	79 f0       	breq	.+30     	; 0x79c <vfprintf+0x8a>
 77e:	83 32       	cpi	r24, 0x23	; 35
 780:	a1 f4       	brne	.+40     	; 0x7aa <vfprintf+0x98>
 782:	23 2d       	mov	r18, r3
 784:	20 61       	ori	r18, 0x10	; 16
 786:	1d c0       	rjmp	.+58     	; 0x7c2 <vfprintf+0xb0>
 788:	8d 32       	cpi	r24, 0x2D	; 45
 78a:	61 f0       	breq	.+24     	; 0x7a4 <vfprintf+0x92>
 78c:	80 33       	cpi	r24, 0x30	; 48
 78e:	69 f4       	brne	.+26     	; 0x7aa <vfprintf+0x98>
 790:	23 2d       	mov	r18, r3
 792:	21 60       	ori	r18, 0x01	; 1
 794:	16 c0       	rjmp	.+44     	; 0x7c2 <vfprintf+0xb0>
 796:	83 2d       	mov	r24, r3
 798:	82 60       	ori	r24, 0x02	; 2
 79a:	38 2e       	mov	r3, r24
 79c:	e3 2d       	mov	r30, r3
 79e:	e4 60       	ori	r30, 0x04	; 4
 7a0:	3e 2e       	mov	r3, r30
 7a2:	2a c0       	rjmp	.+84     	; 0x7f8 <vfprintf+0xe6>
 7a4:	f3 2d       	mov	r31, r3
 7a6:	f8 60       	ori	r31, 0x08	; 8
 7a8:	1d c0       	rjmp	.+58     	; 0x7e4 <vfprintf+0xd2>
 7aa:	37 fc       	sbrc	r3, 7
 7ac:	2d c0       	rjmp	.+90     	; 0x808 <vfprintf+0xf6>
 7ae:	20 ed       	ldi	r18, 0xD0	; 208
 7b0:	28 0f       	add	r18, r24
 7b2:	2a 30       	cpi	r18, 0x0A	; 10
 7b4:	40 f0       	brcs	.+16     	; 0x7c6 <vfprintf+0xb4>
 7b6:	8e 32       	cpi	r24, 0x2E	; 46
 7b8:	b9 f4       	brne	.+46     	; 0x7e8 <vfprintf+0xd6>
 7ba:	36 fc       	sbrc	r3, 6
 7bc:	81 c1       	rjmp	.+770    	; 0xac0 <vfprintf+0x3ae>
 7be:	23 2d       	mov	r18, r3
 7c0:	20 64       	ori	r18, 0x40	; 64
 7c2:	32 2e       	mov	r3, r18
 7c4:	19 c0       	rjmp	.+50     	; 0x7f8 <vfprintf+0xe6>
 7c6:	36 fe       	sbrs	r3, 6
 7c8:	06 c0       	rjmp	.+12     	; 0x7d6 <vfprintf+0xc4>
 7ca:	8a e0       	ldi	r24, 0x0A	; 10
 7cc:	98 9e       	mul	r9, r24
 7ce:	20 0d       	add	r18, r0
 7d0:	11 24       	eor	r1, r1
 7d2:	92 2e       	mov	r9, r18
 7d4:	11 c0       	rjmp	.+34     	; 0x7f8 <vfprintf+0xe6>
 7d6:	ea e0       	ldi	r30, 0x0A	; 10
 7d8:	2e 9e       	mul	r2, r30
 7da:	20 0d       	add	r18, r0
 7dc:	11 24       	eor	r1, r1
 7de:	22 2e       	mov	r2, r18
 7e0:	f3 2d       	mov	r31, r3
 7e2:	f0 62       	ori	r31, 0x20	; 32
 7e4:	3f 2e       	mov	r3, r31
 7e6:	08 c0       	rjmp	.+16     	; 0x7f8 <vfprintf+0xe6>
 7e8:	8c 36       	cpi	r24, 0x6C	; 108
 7ea:	21 f4       	brne	.+8      	; 0x7f4 <vfprintf+0xe2>
 7ec:	83 2d       	mov	r24, r3
 7ee:	80 68       	ori	r24, 0x80	; 128
 7f0:	38 2e       	mov	r3, r24
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <vfprintf+0xe6>
 7f4:	88 36       	cpi	r24, 0x68	; 104
 7f6:	41 f4       	brne	.+16     	; 0x808 <vfprintf+0xf6>
 7f8:	f7 01       	movw	r30, r14
 7fa:	93 fd       	sbrc	r25, 3
 7fc:	85 91       	lpm	r24, Z+
 7fe:	93 ff       	sbrs	r25, 3
 800:	81 91       	ld	r24, Z+
 802:	7f 01       	movw	r14, r30
 804:	81 11       	cpse	r24, r1
 806:	b3 cf       	rjmp	.-154    	; 0x76e <vfprintf+0x5c>
 808:	98 2f       	mov	r25, r24
 80a:	9f 7d       	andi	r25, 0xDF	; 223
 80c:	95 54       	subi	r25, 0x45	; 69
 80e:	93 30       	cpi	r25, 0x03	; 3
 810:	28 f4       	brcc	.+10     	; 0x81c <vfprintf+0x10a>
 812:	0c 5f       	subi	r16, 0xFC	; 252
 814:	1f 4f       	sbci	r17, 0xFF	; 255
 816:	9f e3       	ldi	r25, 0x3F	; 63
 818:	99 83       	std	Y+1, r25	; 0x01
 81a:	0d c0       	rjmp	.+26     	; 0x836 <vfprintf+0x124>
 81c:	83 36       	cpi	r24, 0x63	; 99
 81e:	31 f0       	breq	.+12     	; 0x82c <vfprintf+0x11a>
 820:	83 37       	cpi	r24, 0x73	; 115
 822:	71 f0       	breq	.+28     	; 0x840 <vfprintf+0x12e>
 824:	83 35       	cpi	r24, 0x53	; 83
 826:	09 f0       	breq	.+2      	; 0x82a <vfprintf+0x118>
 828:	59 c0       	rjmp	.+178    	; 0x8dc <vfprintf+0x1ca>
 82a:	21 c0       	rjmp	.+66     	; 0x86e <vfprintf+0x15c>
 82c:	f8 01       	movw	r30, r16
 82e:	80 81       	ld	r24, Z
 830:	89 83       	std	Y+1, r24	; 0x01
 832:	0e 5f       	subi	r16, 0xFE	; 254
 834:	1f 4f       	sbci	r17, 0xFF	; 255
 836:	88 24       	eor	r8, r8
 838:	83 94       	inc	r8
 83a:	91 2c       	mov	r9, r1
 83c:	53 01       	movw	r10, r6
 83e:	13 c0       	rjmp	.+38     	; 0x866 <vfprintf+0x154>
 840:	28 01       	movw	r4, r16
 842:	f2 e0       	ldi	r31, 0x02	; 2
 844:	4f 0e       	add	r4, r31
 846:	51 1c       	adc	r5, r1
 848:	f8 01       	movw	r30, r16
 84a:	a0 80       	ld	r10, Z
 84c:	b1 80       	ldd	r11, Z+1	; 0x01
 84e:	36 fe       	sbrs	r3, 6
 850:	03 c0       	rjmp	.+6      	; 0x858 <vfprintf+0x146>
 852:	69 2d       	mov	r22, r9
 854:	70 e0       	ldi	r23, 0x00	; 0
 856:	02 c0       	rjmp	.+4      	; 0x85c <vfprintf+0x14a>
 858:	6f ef       	ldi	r22, 0xFF	; 255
 85a:	7f ef       	ldi	r23, 0xFF	; 255
 85c:	c5 01       	movw	r24, r10
 85e:	0e 94 75 05 	call	0xaea	; 0xaea <strnlen>
 862:	4c 01       	movw	r8, r24
 864:	82 01       	movw	r16, r4
 866:	f3 2d       	mov	r31, r3
 868:	ff 77       	andi	r31, 0x7F	; 127
 86a:	3f 2e       	mov	r3, r31
 86c:	16 c0       	rjmp	.+44     	; 0x89a <vfprintf+0x188>
 86e:	28 01       	movw	r4, r16
 870:	22 e0       	ldi	r18, 0x02	; 2
 872:	42 0e       	add	r4, r18
 874:	51 1c       	adc	r5, r1
 876:	f8 01       	movw	r30, r16
 878:	a0 80       	ld	r10, Z
 87a:	b1 80       	ldd	r11, Z+1	; 0x01
 87c:	36 fe       	sbrs	r3, 6
 87e:	03 c0       	rjmp	.+6      	; 0x886 <vfprintf+0x174>
 880:	69 2d       	mov	r22, r9
 882:	70 e0       	ldi	r23, 0x00	; 0
 884:	02 c0       	rjmp	.+4      	; 0x88a <vfprintf+0x178>
 886:	6f ef       	ldi	r22, 0xFF	; 255
 888:	7f ef       	ldi	r23, 0xFF	; 255
 88a:	c5 01       	movw	r24, r10
 88c:	0e 94 6a 05 	call	0xad4	; 0xad4 <strnlen_P>
 890:	4c 01       	movw	r8, r24
 892:	f3 2d       	mov	r31, r3
 894:	f0 68       	ori	r31, 0x80	; 128
 896:	3f 2e       	mov	r3, r31
 898:	82 01       	movw	r16, r4
 89a:	33 fc       	sbrc	r3, 3
 89c:	1b c0       	rjmp	.+54     	; 0x8d4 <vfprintf+0x1c2>
 89e:	82 2d       	mov	r24, r2
 8a0:	90 e0       	ldi	r25, 0x00	; 0
 8a2:	88 16       	cp	r8, r24
 8a4:	99 06       	cpc	r9, r25
 8a6:	b0 f4       	brcc	.+44     	; 0x8d4 <vfprintf+0x1c2>
 8a8:	b6 01       	movw	r22, r12
 8aa:	80 e2       	ldi	r24, 0x20	; 32
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 8b2:	2a 94       	dec	r2
 8b4:	f4 cf       	rjmp	.-24     	; 0x89e <vfprintf+0x18c>
 8b6:	f5 01       	movw	r30, r10
 8b8:	37 fc       	sbrc	r3, 7
 8ba:	85 91       	lpm	r24, Z+
 8bc:	37 fe       	sbrs	r3, 7
 8be:	81 91       	ld	r24, Z+
 8c0:	5f 01       	movw	r10, r30
 8c2:	b6 01       	movw	r22, r12
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 8ca:	21 10       	cpse	r2, r1
 8cc:	2a 94       	dec	r2
 8ce:	21 e0       	ldi	r18, 0x01	; 1
 8d0:	82 1a       	sub	r8, r18
 8d2:	91 08       	sbc	r9, r1
 8d4:	81 14       	cp	r8, r1
 8d6:	91 04       	cpc	r9, r1
 8d8:	71 f7       	brne	.-36     	; 0x8b6 <vfprintf+0x1a4>
 8da:	e8 c0       	rjmp	.+464    	; 0xaac <vfprintf+0x39a>
 8dc:	84 36       	cpi	r24, 0x64	; 100
 8de:	11 f0       	breq	.+4      	; 0x8e4 <vfprintf+0x1d2>
 8e0:	89 36       	cpi	r24, 0x69	; 105
 8e2:	41 f5       	brne	.+80     	; 0x934 <vfprintf+0x222>
 8e4:	f8 01       	movw	r30, r16
 8e6:	37 fe       	sbrs	r3, 7
 8e8:	07 c0       	rjmp	.+14     	; 0x8f8 <vfprintf+0x1e6>
 8ea:	60 81       	ld	r22, Z
 8ec:	71 81       	ldd	r23, Z+1	; 0x01
 8ee:	82 81       	ldd	r24, Z+2	; 0x02
 8f0:	93 81       	ldd	r25, Z+3	; 0x03
 8f2:	0c 5f       	subi	r16, 0xFC	; 252
 8f4:	1f 4f       	sbci	r17, 0xFF	; 255
 8f6:	08 c0       	rjmp	.+16     	; 0x908 <vfprintf+0x1f6>
 8f8:	60 81       	ld	r22, Z
 8fa:	71 81       	ldd	r23, Z+1	; 0x01
 8fc:	07 2e       	mov	r0, r23
 8fe:	00 0c       	add	r0, r0
 900:	88 0b       	sbc	r24, r24
 902:	99 0b       	sbc	r25, r25
 904:	0e 5f       	subi	r16, 0xFE	; 254
 906:	1f 4f       	sbci	r17, 0xFF	; 255
 908:	f3 2d       	mov	r31, r3
 90a:	ff 76       	andi	r31, 0x6F	; 111
 90c:	3f 2e       	mov	r3, r31
 90e:	97 ff       	sbrs	r25, 7
 910:	09 c0       	rjmp	.+18     	; 0x924 <vfprintf+0x212>
 912:	90 95       	com	r25
 914:	80 95       	com	r24
 916:	70 95       	com	r23
 918:	61 95       	neg	r22
 91a:	7f 4f       	sbci	r23, 0xFF	; 255
 91c:	8f 4f       	sbci	r24, 0xFF	; 255
 91e:	9f 4f       	sbci	r25, 0xFF	; 255
 920:	f0 68       	ori	r31, 0x80	; 128
 922:	3f 2e       	mov	r3, r31
 924:	2a e0       	ldi	r18, 0x0A	; 10
 926:	30 e0       	ldi	r19, 0x00	; 0
 928:	a3 01       	movw	r20, r6
 92a:	0e 94 bc 05 	call	0xb78	; 0xb78 <__ultoa_invert>
 92e:	88 2e       	mov	r8, r24
 930:	86 18       	sub	r8, r6
 932:	45 c0       	rjmp	.+138    	; 0x9be <vfprintf+0x2ac>
 934:	85 37       	cpi	r24, 0x75	; 117
 936:	31 f4       	brne	.+12     	; 0x944 <vfprintf+0x232>
 938:	23 2d       	mov	r18, r3
 93a:	2f 7e       	andi	r18, 0xEF	; 239
 93c:	b2 2e       	mov	r11, r18
 93e:	2a e0       	ldi	r18, 0x0A	; 10
 940:	30 e0       	ldi	r19, 0x00	; 0
 942:	25 c0       	rjmp	.+74     	; 0x98e <vfprintf+0x27c>
 944:	93 2d       	mov	r25, r3
 946:	99 7f       	andi	r25, 0xF9	; 249
 948:	b9 2e       	mov	r11, r25
 94a:	8f 36       	cpi	r24, 0x6F	; 111
 94c:	c1 f0       	breq	.+48     	; 0x97e <vfprintf+0x26c>
 94e:	18 f4       	brcc	.+6      	; 0x956 <vfprintf+0x244>
 950:	88 35       	cpi	r24, 0x58	; 88
 952:	79 f0       	breq	.+30     	; 0x972 <vfprintf+0x260>
 954:	b5 c0       	rjmp	.+362    	; 0xac0 <vfprintf+0x3ae>
 956:	80 37       	cpi	r24, 0x70	; 112
 958:	19 f0       	breq	.+6      	; 0x960 <vfprintf+0x24e>
 95a:	88 37       	cpi	r24, 0x78	; 120
 95c:	21 f0       	breq	.+8      	; 0x966 <vfprintf+0x254>
 95e:	b0 c0       	rjmp	.+352    	; 0xac0 <vfprintf+0x3ae>
 960:	e9 2f       	mov	r30, r25
 962:	e0 61       	ori	r30, 0x10	; 16
 964:	be 2e       	mov	r11, r30
 966:	b4 fe       	sbrs	r11, 4
 968:	0d c0       	rjmp	.+26     	; 0x984 <vfprintf+0x272>
 96a:	fb 2d       	mov	r31, r11
 96c:	f4 60       	ori	r31, 0x04	; 4
 96e:	bf 2e       	mov	r11, r31
 970:	09 c0       	rjmp	.+18     	; 0x984 <vfprintf+0x272>
 972:	34 fe       	sbrs	r3, 4
 974:	0a c0       	rjmp	.+20     	; 0x98a <vfprintf+0x278>
 976:	29 2f       	mov	r18, r25
 978:	26 60       	ori	r18, 0x06	; 6
 97a:	b2 2e       	mov	r11, r18
 97c:	06 c0       	rjmp	.+12     	; 0x98a <vfprintf+0x278>
 97e:	28 e0       	ldi	r18, 0x08	; 8
 980:	30 e0       	ldi	r19, 0x00	; 0
 982:	05 c0       	rjmp	.+10     	; 0x98e <vfprintf+0x27c>
 984:	20 e1       	ldi	r18, 0x10	; 16
 986:	30 e0       	ldi	r19, 0x00	; 0
 988:	02 c0       	rjmp	.+4      	; 0x98e <vfprintf+0x27c>
 98a:	20 e1       	ldi	r18, 0x10	; 16
 98c:	32 e0       	ldi	r19, 0x02	; 2
 98e:	f8 01       	movw	r30, r16
 990:	b7 fe       	sbrs	r11, 7
 992:	07 c0       	rjmp	.+14     	; 0x9a2 <vfprintf+0x290>
 994:	60 81       	ld	r22, Z
 996:	71 81       	ldd	r23, Z+1	; 0x01
 998:	82 81       	ldd	r24, Z+2	; 0x02
 99a:	93 81       	ldd	r25, Z+3	; 0x03
 99c:	0c 5f       	subi	r16, 0xFC	; 252
 99e:	1f 4f       	sbci	r17, 0xFF	; 255
 9a0:	06 c0       	rjmp	.+12     	; 0x9ae <vfprintf+0x29c>
 9a2:	60 81       	ld	r22, Z
 9a4:	71 81       	ldd	r23, Z+1	; 0x01
 9a6:	80 e0       	ldi	r24, 0x00	; 0
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	0e 5f       	subi	r16, 0xFE	; 254
 9ac:	1f 4f       	sbci	r17, 0xFF	; 255
 9ae:	a3 01       	movw	r20, r6
 9b0:	0e 94 bc 05 	call	0xb78	; 0xb78 <__ultoa_invert>
 9b4:	88 2e       	mov	r8, r24
 9b6:	86 18       	sub	r8, r6
 9b8:	fb 2d       	mov	r31, r11
 9ba:	ff 77       	andi	r31, 0x7F	; 127
 9bc:	3f 2e       	mov	r3, r31
 9be:	36 fe       	sbrs	r3, 6
 9c0:	0d c0       	rjmp	.+26     	; 0x9dc <vfprintf+0x2ca>
 9c2:	23 2d       	mov	r18, r3
 9c4:	2e 7f       	andi	r18, 0xFE	; 254
 9c6:	a2 2e       	mov	r10, r18
 9c8:	89 14       	cp	r8, r9
 9ca:	58 f4       	brcc	.+22     	; 0x9e2 <vfprintf+0x2d0>
 9cc:	34 fe       	sbrs	r3, 4
 9ce:	0b c0       	rjmp	.+22     	; 0x9e6 <vfprintf+0x2d4>
 9d0:	32 fc       	sbrc	r3, 2
 9d2:	09 c0       	rjmp	.+18     	; 0x9e6 <vfprintf+0x2d4>
 9d4:	83 2d       	mov	r24, r3
 9d6:	8e 7e       	andi	r24, 0xEE	; 238
 9d8:	a8 2e       	mov	r10, r24
 9da:	05 c0       	rjmp	.+10     	; 0x9e6 <vfprintf+0x2d4>
 9dc:	b8 2c       	mov	r11, r8
 9de:	a3 2c       	mov	r10, r3
 9e0:	03 c0       	rjmp	.+6      	; 0x9e8 <vfprintf+0x2d6>
 9e2:	b8 2c       	mov	r11, r8
 9e4:	01 c0       	rjmp	.+2      	; 0x9e8 <vfprintf+0x2d6>
 9e6:	b9 2c       	mov	r11, r9
 9e8:	a4 fe       	sbrs	r10, 4
 9ea:	0f c0       	rjmp	.+30     	; 0xa0a <vfprintf+0x2f8>
 9ec:	fe 01       	movw	r30, r28
 9ee:	e8 0d       	add	r30, r8
 9f0:	f1 1d       	adc	r31, r1
 9f2:	80 81       	ld	r24, Z
 9f4:	80 33       	cpi	r24, 0x30	; 48
 9f6:	21 f4       	brne	.+8      	; 0xa00 <vfprintf+0x2ee>
 9f8:	9a 2d       	mov	r25, r10
 9fa:	99 7e       	andi	r25, 0xE9	; 233
 9fc:	a9 2e       	mov	r10, r25
 9fe:	09 c0       	rjmp	.+18     	; 0xa12 <vfprintf+0x300>
 a00:	a2 fe       	sbrs	r10, 2
 a02:	06 c0       	rjmp	.+12     	; 0xa10 <vfprintf+0x2fe>
 a04:	b3 94       	inc	r11
 a06:	b3 94       	inc	r11
 a08:	04 c0       	rjmp	.+8      	; 0xa12 <vfprintf+0x300>
 a0a:	8a 2d       	mov	r24, r10
 a0c:	86 78       	andi	r24, 0x86	; 134
 a0e:	09 f0       	breq	.+2      	; 0xa12 <vfprintf+0x300>
 a10:	b3 94       	inc	r11
 a12:	a3 fc       	sbrc	r10, 3
 a14:	11 c0       	rjmp	.+34     	; 0xa38 <vfprintf+0x326>
 a16:	a0 fe       	sbrs	r10, 0
 a18:	06 c0       	rjmp	.+12     	; 0xa26 <vfprintf+0x314>
 a1a:	b2 14       	cp	r11, r2
 a1c:	88 f4       	brcc	.+34     	; 0xa40 <vfprintf+0x32e>
 a1e:	28 0c       	add	r2, r8
 a20:	92 2c       	mov	r9, r2
 a22:	9b 18       	sub	r9, r11
 a24:	0e c0       	rjmp	.+28     	; 0xa42 <vfprintf+0x330>
 a26:	b2 14       	cp	r11, r2
 a28:	60 f4       	brcc	.+24     	; 0xa42 <vfprintf+0x330>
 a2a:	b6 01       	movw	r22, r12
 a2c:	80 e2       	ldi	r24, 0x20	; 32
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 a34:	b3 94       	inc	r11
 a36:	f7 cf       	rjmp	.-18     	; 0xa26 <vfprintf+0x314>
 a38:	b2 14       	cp	r11, r2
 a3a:	18 f4       	brcc	.+6      	; 0xa42 <vfprintf+0x330>
 a3c:	2b 18       	sub	r2, r11
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <vfprintf+0x332>
 a40:	98 2c       	mov	r9, r8
 a42:	21 2c       	mov	r2, r1
 a44:	a4 fe       	sbrs	r10, 4
 a46:	10 c0       	rjmp	.+32     	; 0xa68 <vfprintf+0x356>
 a48:	b6 01       	movw	r22, r12
 a4a:	80 e3       	ldi	r24, 0x30	; 48
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 a52:	a2 fe       	sbrs	r10, 2
 a54:	17 c0       	rjmp	.+46     	; 0xa84 <vfprintf+0x372>
 a56:	a1 fc       	sbrc	r10, 1
 a58:	03 c0       	rjmp	.+6      	; 0xa60 <vfprintf+0x34e>
 a5a:	88 e7       	ldi	r24, 0x78	; 120
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	02 c0       	rjmp	.+4      	; 0xa64 <vfprintf+0x352>
 a60:	88 e5       	ldi	r24, 0x58	; 88
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	b6 01       	movw	r22, r12
 a66:	0c c0       	rjmp	.+24     	; 0xa80 <vfprintf+0x36e>
 a68:	8a 2d       	mov	r24, r10
 a6a:	86 78       	andi	r24, 0x86	; 134
 a6c:	59 f0       	breq	.+22     	; 0xa84 <vfprintf+0x372>
 a6e:	a1 fe       	sbrs	r10, 1
 a70:	02 c0       	rjmp	.+4      	; 0xa76 <vfprintf+0x364>
 a72:	8b e2       	ldi	r24, 0x2B	; 43
 a74:	01 c0       	rjmp	.+2      	; 0xa78 <vfprintf+0x366>
 a76:	80 e2       	ldi	r24, 0x20	; 32
 a78:	a7 fc       	sbrc	r10, 7
 a7a:	8d e2       	ldi	r24, 0x2D	; 45
 a7c:	b6 01       	movw	r22, r12
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 a84:	89 14       	cp	r8, r9
 a86:	38 f4       	brcc	.+14     	; 0xa96 <vfprintf+0x384>
 a88:	b6 01       	movw	r22, r12
 a8a:	80 e3       	ldi	r24, 0x30	; 48
 a8c:	90 e0       	ldi	r25, 0x00	; 0
 a8e:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 a92:	9a 94       	dec	r9
 a94:	f7 cf       	rjmp	.-18     	; 0xa84 <vfprintf+0x372>
 a96:	8a 94       	dec	r8
 a98:	f3 01       	movw	r30, r6
 a9a:	e8 0d       	add	r30, r8
 a9c:	f1 1d       	adc	r31, r1
 a9e:	80 81       	ld	r24, Z
 aa0:	b6 01       	movw	r22, r12
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 aa8:	81 10       	cpse	r8, r1
 aaa:	f5 cf       	rjmp	.-22     	; 0xa96 <vfprintf+0x384>
 aac:	22 20       	and	r2, r2
 aae:	09 f4       	brne	.+2      	; 0xab2 <vfprintf+0x3a0>
 ab0:	42 ce       	rjmp	.-892    	; 0x736 <vfprintf+0x24>
 ab2:	b6 01       	movw	r22, r12
 ab4:	80 e2       	ldi	r24, 0x20	; 32
 ab6:	90 e0       	ldi	r25, 0x00	; 0
 ab8:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 abc:	2a 94       	dec	r2
 abe:	f6 cf       	rjmp	.-20     	; 0xaac <vfprintf+0x39a>
 ac0:	f6 01       	movw	r30, r12
 ac2:	86 81       	ldd	r24, Z+6	; 0x06
 ac4:	97 81       	ldd	r25, Z+7	; 0x07
 ac6:	02 c0       	rjmp	.+4      	; 0xacc <vfprintf+0x3ba>
 ac8:	8f ef       	ldi	r24, 0xFF	; 255
 aca:	9f ef       	ldi	r25, 0xFF	; 255
 acc:	2b 96       	adiw	r28, 0x0b	; 11
 ace:	e2 e1       	ldi	r30, 0x12	; 18
 ad0:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__epilogue_restores__>

00000ad4 <strnlen_P>:
 ad4:	fc 01       	movw	r30, r24
 ad6:	05 90       	lpm	r0, Z+
 ad8:	61 50       	subi	r22, 0x01	; 1
 ada:	70 40       	sbci	r23, 0x00	; 0
 adc:	01 10       	cpse	r0, r1
 ade:	d8 f7       	brcc	.-10     	; 0xad6 <strnlen_P+0x2>
 ae0:	80 95       	com	r24
 ae2:	90 95       	com	r25
 ae4:	8e 0f       	add	r24, r30
 ae6:	9f 1f       	adc	r25, r31
 ae8:	08 95       	ret

00000aea <strnlen>:
 aea:	fc 01       	movw	r30, r24
 aec:	61 50       	subi	r22, 0x01	; 1
 aee:	70 40       	sbci	r23, 0x00	; 0
 af0:	01 90       	ld	r0, Z+
 af2:	01 10       	cpse	r0, r1
 af4:	d8 f7       	brcc	.-10     	; 0xaec <strnlen+0x2>
 af6:	80 95       	com	r24
 af8:	90 95       	com	r25
 afa:	8e 0f       	add	r24, r30
 afc:	9f 1f       	adc	r25, r31
 afe:	08 95       	ret

00000b00 <fputc>:
 b00:	0f 93       	push	r16
 b02:	1f 93       	push	r17
 b04:	cf 93       	push	r28
 b06:	df 93       	push	r29
 b08:	fb 01       	movw	r30, r22
 b0a:	23 81       	ldd	r18, Z+3	; 0x03
 b0c:	21 fd       	sbrc	r18, 1
 b0e:	03 c0       	rjmp	.+6      	; 0xb16 <fputc+0x16>
 b10:	8f ef       	ldi	r24, 0xFF	; 255
 b12:	9f ef       	ldi	r25, 0xFF	; 255
 b14:	2c c0       	rjmp	.+88     	; 0xb6e <fputc+0x6e>
 b16:	22 ff       	sbrs	r18, 2
 b18:	16 c0       	rjmp	.+44     	; 0xb46 <fputc+0x46>
 b1a:	46 81       	ldd	r20, Z+6	; 0x06
 b1c:	57 81       	ldd	r21, Z+7	; 0x07
 b1e:	24 81       	ldd	r18, Z+4	; 0x04
 b20:	35 81       	ldd	r19, Z+5	; 0x05
 b22:	42 17       	cp	r20, r18
 b24:	53 07       	cpc	r21, r19
 b26:	44 f4       	brge	.+16     	; 0xb38 <fputc+0x38>
 b28:	a0 81       	ld	r26, Z
 b2a:	b1 81       	ldd	r27, Z+1	; 0x01
 b2c:	9d 01       	movw	r18, r26
 b2e:	2f 5f       	subi	r18, 0xFF	; 255
 b30:	3f 4f       	sbci	r19, 0xFF	; 255
 b32:	31 83       	std	Z+1, r19	; 0x01
 b34:	20 83       	st	Z, r18
 b36:	8c 93       	st	X, r24
 b38:	26 81       	ldd	r18, Z+6	; 0x06
 b3a:	37 81       	ldd	r19, Z+7	; 0x07
 b3c:	2f 5f       	subi	r18, 0xFF	; 255
 b3e:	3f 4f       	sbci	r19, 0xFF	; 255
 b40:	37 83       	std	Z+7, r19	; 0x07
 b42:	26 83       	std	Z+6, r18	; 0x06
 b44:	14 c0       	rjmp	.+40     	; 0xb6e <fputc+0x6e>
 b46:	8b 01       	movw	r16, r22
 b48:	ec 01       	movw	r28, r24
 b4a:	fb 01       	movw	r30, r22
 b4c:	00 84       	ldd	r0, Z+8	; 0x08
 b4e:	f1 85       	ldd	r31, Z+9	; 0x09
 b50:	e0 2d       	mov	r30, r0
 b52:	09 95       	icall
 b54:	89 2b       	or	r24, r25
 b56:	e1 f6       	brne	.-72     	; 0xb10 <fputc+0x10>
 b58:	d8 01       	movw	r26, r16
 b5a:	16 96       	adiw	r26, 0x06	; 6
 b5c:	8d 91       	ld	r24, X+
 b5e:	9c 91       	ld	r25, X
 b60:	17 97       	sbiw	r26, 0x07	; 7
 b62:	01 96       	adiw	r24, 0x01	; 1
 b64:	17 96       	adiw	r26, 0x07	; 7
 b66:	9c 93       	st	X, r25
 b68:	8e 93       	st	-X, r24
 b6a:	16 97       	sbiw	r26, 0x06	; 6
 b6c:	ce 01       	movw	r24, r28
 b6e:	df 91       	pop	r29
 b70:	cf 91       	pop	r28
 b72:	1f 91       	pop	r17
 b74:	0f 91       	pop	r16
 b76:	08 95       	ret

00000b78 <__ultoa_invert>:
 b78:	fa 01       	movw	r30, r20
 b7a:	aa 27       	eor	r26, r26
 b7c:	28 30       	cpi	r18, 0x08	; 8
 b7e:	51 f1       	breq	.+84     	; 0xbd4 <__ultoa_invert+0x5c>
 b80:	20 31       	cpi	r18, 0x10	; 16
 b82:	81 f1       	breq	.+96     	; 0xbe4 <__ultoa_invert+0x6c>
 b84:	e8 94       	clt
 b86:	6f 93       	push	r22
 b88:	6e 7f       	andi	r22, 0xFE	; 254
 b8a:	6e 5f       	subi	r22, 0xFE	; 254
 b8c:	7f 4f       	sbci	r23, 0xFF	; 255
 b8e:	8f 4f       	sbci	r24, 0xFF	; 255
 b90:	9f 4f       	sbci	r25, 0xFF	; 255
 b92:	af 4f       	sbci	r26, 0xFF	; 255
 b94:	b1 e0       	ldi	r27, 0x01	; 1
 b96:	3e d0       	rcall	.+124    	; 0xc14 <__ultoa_invert+0x9c>
 b98:	b4 e0       	ldi	r27, 0x04	; 4
 b9a:	3c d0       	rcall	.+120    	; 0xc14 <__ultoa_invert+0x9c>
 b9c:	67 0f       	add	r22, r23
 b9e:	78 1f       	adc	r23, r24
 ba0:	89 1f       	adc	r24, r25
 ba2:	9a 1f       	adc	r25, r26
 ba4:	a1 1d       	adc	r26, r1
 ba6:	68 0f       	add	r22, r24
 ba8:	79 1f       	adc	r23, r25
 baa:	8a 1f       	adc	r24, r26
 bac:	91 1d       	adc	r25, r1
 bae:	a1 1d       	adc	r26, r1
 bb0:	6a 0f       	add	r22, r26
 bb2:	71 1d       	adc	r23, r1
 bb4:	81 1d       	adc	r24, r1
 bb6:	91 1d       	adc	r25, r1
 bb8:	a1 1d       	adc	r26, r1
 bba:	20 d0       	rcall	.+64     	; 0xbfc <__ultoa_invert+0x84>
 bbc:	09 f4       	brne	.+2      	; 0xbc0 <__ultoa_invert+0x48>
 bbe:	68 94       	set
 bc0:	3f 91       	pop	r19
 bc2:	2a e0       	ldi	r18, 0x0A	; 10
 bc4:	26 9f       	mul	r18, r22
 bc6:	11 24       	eor	r1, r1
 bc8:	30 19       	sub	r19, r0
 bca:	30 5d       	subi	r19, 0xD0	; 208
 bcc:	31 93       	st	Z+, r19
 bce:	de f6       	brtc	.-74     	; 0xb86 <__ultoa_invert+0xe>
 bd0:	cf 01       	movw	r24, r30
 bd2:	08 95       	ret
 bd4:	46 2f       	mov	r20, r22
 bd6:	47 70       	andi	r20, 0x07	; 7
 bd8:	40 5d       	subi	r20, 0xD0	; 208
 bda:	41 93       	st	Z+, r20
 bdc:	b3 e0       	ldi	r27, 0x03	; 3
 bde:	0f d0       	rcall	.+30     	; 0xbfe <__ultoa_invert+0x86>
 be0:	c9 f7       	brne	.-14     	; 0xbd4 <__ultoa_invert+0x5c>
 be2:	f6 cf       	rjmp	.-20     	; 0xbd0 <__ultoa_invert+0x58>
 be4:	46 2f       	mov	r20, r22
 be6:	4f 70       	andi	r20, 0x0F	; 15
 be8:	40 5d       	subi	r20, 0xD0	; 208
 bea:	4a 33       	cpi	r20, 0x3A	; 58
 bec:	18 f0       	brcs	.+6      	; 0xbf4 <__ultoa_invert+0x7c>
 bee:	49 5d       	subi	r20, 0xD9	; 217
 bf0:	31 fd       	sbrc	r19, 1
 bf2:	40 52       	subi	r20, 0x20	; 32
 bf4:	41 93       	st	Z+, r20
 bf6:	02 d0       	rcall	.+4      	; 0xbfc <__ultoa_invert+0x84>
 bf8:	a9 f7       	brne	.-22     	; 0xbe4 <__ultoa_invert+0x6c>
 bfa:	ea cf       	rjmp	.-44     	; 0xbd0 <__ultoa_invert+0x58>
 bfc:	b4 e0       	ldi	r27, 0x04	; 4
 bfe:	a6 95       	lsr	r26
 c00:	97 95       	ror	r25
 c02:	87 95       	ror	r24
 c04:	77 95       	ror	r23
 c06:	67 95       	ror	r22
 c08:	ba 95       	dec	r27
 c0a:	c9 f7       	brne	.-14     	; 0xbfe <__ultoa_invert+0x86>
 c0c:	00 97       	sbiw	r24, 0x00	; 0
 c0e:	61 05       	cpc	r22, r1
 c10:	71 05       	cpc	r23, r1
 c12:	08 95       	ret
 c14:	9b 01       	movw	r18, r22
 c16:	ac 01       	movw	r20, r24
 c18:	0a 2e       	mov	r0, r26
 c1a:	06 94       	lsr	r0
 c1c:	57 95       	ror	r21
 c1e:	47 95       	ror	r20
 c20:	37 95       	ror	r19
 c22:	27 95       	ror	r18
 c24:	ba 95       	dec	r27
 c26:	c9 f7       	brne	.-14     	; 0xc1a <__ultoa_invert+0xa2>
 c28:	62 0f       	add	r22, r18
 c2a:	73 1f       	adc	r23, r19
 c2c:	84 1f       	adc	r24, r20
 c2e:	95 1f       	adc	r25, r21
 c30:	a0 1d       	adc	r26, r0
 c32:	08 95       	ret

00000c34 <__prologue_saves__>:
 c34:	2f 92       	push	r2
 c36:	3f 92       	push	r3
 c38:	4f 92       	push	r4
 c3a:	5f 92       	push	r5
 c3c:	6f 92       	push	r6
 c3e:	7f 92       	push	r7
 c40:	8f 92       	push	r8
 c42:	9f 92       	push	r9
 c44:	af 92       	push	r10
 c46:	bf 92       	push	r11
 c48:	cf 92       	push	r12
 c4a:	df 92       	push	r13
 c4c:	ef 92       	push	r14
 c4e:	ff 92       	push	r15
 c50:	0f 93       	push	r16
 c52:	1f 93       	push	r17
 c54:	cf 93       	push	r28
 c56:	df 93       	push	r29
 c58:	cd b7       	in	r28, 0x3d	; 61
 c5a:	de b7       	in	r29, 0x3e	; 62
 c5c:	ca 1b       	sub	r28, r26
 c5e:	db 0b       	sbc	r29, r27
 c60:	0f b6       	in	r0, 0x3f	; 63
 c62:	f8 94       	cli
 c64:	de bf       	out	0x3e, r29	; 62
 c66:	0f be       	out	0x3f, r0	; 63
 c68:	cd bf       	out	0x3d, r28	; 61
 c6a:	09 94       	ijmp

00000c6c <__epilogue_restores__>:
 c6c:	2a 88       	ldd	r2, Y+18	; 0x12
 c6e:	39 88       	ldd	r3, Y+17	; 0x11
 c70:	48 88       	ldd	r4, Y+16	; 0x10
 c72:	5f 84       	ldd	r5, Y+15	; 0x0f
 c74:	6e 84       	ldd	r6, Y+14	; 0x0e
 c76:	7d 84       	ldd	r7, Y+13	; 0x0d
 c78:	8c 84       	ldd	r8, Y+12	; 0x0c
 c7a:	9b 84       	ldd	r9, Y+11	; 0x0b
 c7c:	aa 84       	ldd	r10, Y+10	; 0x0a
 c7e:	b9 84       	ldd	r11, Y+9	; 0x09
 c80:	c8 84       	ldd	r12, Y+8	; 0x08
 c82:	df 80       	ldd	r13, Y+7	; 0x07
 c84:	ee 80       	ldd	r14, Y+6	; 0x06
 c86:	fd 80       	ldd	r15, Y+5	; 0x05
 c88:	0c 81       	ldd	r16, Y+4	; 0x04
 c8a:	1b 81       	ldd	r17, Y+3	; 0x03
 c8c:	aa 81       	ldd	r26, Y+2	; 0x02
 c8e:	b9 81       	ldd	r27, Y+1	; 0x01
 c90:	ce 0f       	add	r28, r30
 c92:	d1 1d       	adc	r29, r1
 c94:	0f b6       	in	r0, 0x3f	; 63
 c96:	f8 94       	cli
 c98:	de bf       	out	0x3e, r29	; 62
 c9a:	0f be       	out	0x3f, r0	; 63
 c9c:	cd bf       	out	0x3d, r28	; 61
 c9e:	ed 01       	movw	r28, r26
 ca0:	08 95       	ret

00000ca2 <_exit>:
 ca2:	f8 94       	cli

00000ca4 <__stop_program>:
 ca4:	ff cf       	rjmp	.-2      	; 0xca4 <__stop_program>
